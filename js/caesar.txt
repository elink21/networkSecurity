var map = Array.prototype.map;
let iconAnimation = anime({
    targets: "#icon span",
    rotateX: [0, 360],
    easing: 'linear',
    duration: 500,
});


function caesar(msg, key) {
    key = +key;
    var mappedArray = map.call(msg, function (char) {
        key %= 26;

        let newNumber = char.charCodeAt(0) + key;
        if (newNumber > 96 && newNumber <= 122) {
            return newNumber;
        }
        if (newNumber <= 96) {
            return 122 - (96 - newNumber);
        }

        if (newNumber >= 122) {
            return 96 + (newNumber % 122);
        }
    });
    iconAnimation.play();
    return String.fromCharCode(...mappedArray);

}


function encryptText(msg) {
    let encryptedTag = document.querySelector("#encryptedTag");
    let step = document.querySelector("#stepInput");
    encryptedTag.value = caesar(msg, +step.value);
}


function decryptText(msg) {
    let plainTag = document.querySelector("#plainTag");
    let step = document.querySelector("#stepInput");
    plainTag.value = caesar(msg, -1 * (+step.value));
}

function updateBoth() {
    let encrypted = document.querySelector("#encryptedInput").value;
    let plain = document.querySelector("#plainInput").value;

    decryptText(encrypted);
    encryptText(plain);
}

